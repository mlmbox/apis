syntax = "proto3";

package mlmbox.local.account;
import "mlmbox/local/type/account.proto";
import "mlmbox/type/account.proto";
import "mlmbox/type/bonus.proto";
import "mlmbox/type/career.proto";
import "mlmbox/type/farming.proto";
import "mlmbox/type/limit.proto";
import "mlmbox/type/locale.proto";
import "mlmbox/type/partner.proto";
import "mlmbox/type/product.proto";
import "mlmbox/type/profile.proto";
import "mlmbox/type/sort.proto";

option go_package = "github.com/mlmbox/go-genproto/mlmbox/local/account;service_local_account_pb";

service Account {
  rpc LoginToID(mlmbox.local.type.Account.Login) returns (AccountLoginToIDResponse) {}
  rpc SignStateGetByID(mlmbox.local.type.Account.ID) returns (AccountSignStateResponse) {}
  rpc SignStateGetByLogin(mlmbox.local.type.Account.Login) returns (AccountSignStateResponse) {}
  rpc SignStateGetByEmail(mlmbox.local.type.Account.Email) returns (AccountSignStateResponse) {}
  rpc ExistByLogin(AccountExistByLoginRequest) returns (AccountExistAccountResponse) {}
  rpc ExistByEmail(AccountExistByEmailRequest) returns (AccountExistAccountResponse) {}
  rpc Info(mlmbox.local.type.Account.ID) returns (AccountInfoResponse) {}
  rpc InfoV2(mlmbox.local.type.Account.ID) returns (AccountInfoResponse) {}
  rpc ShortInfo(mlmbox.local.type.Account.ID) returns (AccountShortInfoResponse) {}
  rpc ProfileSet(AccountProfileSetRequest) returns (Error) {}
  rpc LocaleSet(AccountLocaleSetRequest) returns (Error) {}
  rpc PasswordSet(AccountPasswordSetRequest) returns (Error) {}
  rpc EmailSet(AccountEmailSetRequest) returns (Error) {}
  rpc SignAttach(AccountSignAttachRequest) returns (Error) {}
  rpc SignUp(AccountSignUpRequest) returns (AccountSignUpResponse) {}
  rpc CareerInfo(mlmbox.local.type.Account.ID) returns (AccountCareerInfoResponse) {}
  rpc PortfolioInfo(mlmbox.local.type.Account.ID) returns (AccountPortfolioInfoResponse) {}
  rpc BonusesInfo(mlmbox.local.type.Account.ID) returns (AccountBonusesInfoResponse) {}
  rpc BonusesInfoV2(mlmbox.local.type.Account.ID) returns (AccountBonusesInfoV2Response) {}
  rpc BonusesAutoExchangeSet(BonusesAutoExchangeSetRequest) returns (Error) {}

  rpc NetworkPartnerGet(NetworkPartnerRequest) returns (NetworkPartnerResponse) {}
  rpc NetworkPartnerSearch(NetworkPartnerSearchRequest) returns (NetworkPartnersShortInfoResponse) {}
  rpc NetworkTeamInfo(NetworkTeamRequest) returns (NetworkTeamResponse) {}
  rpc NetworkTeamSearch(NetworkTeamSearchRequest) returns (NetworkPartnersResponse) {}
  rpc NetworkTeamPartnerList(NetworkTeamPartnerListRequest) returns (NetworkPartnersResponse) {}
  rpc NetworkBookingInfo(mlmbox.local.type.Account.ID) returns (NetworkBookingInfoResponse) {}
  rpc NetworkBookingCreate(NetworkBookingCreateRequest) returns (NetworkBookingCreateResponse) {}

  rpc FarmingInfo(mlmbox.local.type.Account.ID) returns (FarmingInfoResponse) {}
  rpc FarmingInfoV2(mlmbox.local.type.Account.ID) returns (FarmingInfoV2Response) {}
  rpc FarmingContractGet(FarmingContractRequest) returns (FarmingContractGetResponse) {}
  rpc FarmingContractEventsAll(FarmingContractRequest) returns (FarmingContractEventsAllResponse) {}

  rpc AdminAccessCheck(mlmbox.local.type.Account.ID) returns (Error) {}
}

message Error {
  enum ID {
    OK = 0;
    ACCOUNT_UNKNOWN = 1;
    ACCOUNT_NOT_FOUND = 2;
    LOCALE_UNKNOWN = 3;
    LOCALE_NOT_FOUND = 4;
    REFERRAL_NOT_FOUND = 5;
    LOGIN_UNKNOWN = 6;
    LOGIN_BUSY = 7;
    EMAIL_UNKNOWN = 8;
    EMAIL_BUSY = 9;
    VIEW_PARTNER_UNKNOWN = 10;
    VIEW_PARTNER_NOT_FOUND = 11;
    VIEW_PARTNER_NOT_ACCESS = 12;
    BOOKING_CREATE_REACHED_LIMIT = 13;
    FARMING_CONTRACT_UNKNOWN = 14;
    FARMING_CONTRACT_NOT_FOUND = 15;
  }
  ID error_id = 1;
}
message AccountLoginToIDResponse {
  Error.ID error_id = 1;
  uint32 account_id = 2;
}
message AccountSignStateResponse {
  Error.ID error_id = 1;
  mlmbox.local.type.Account.SignState sign_state = 2;
}
message AccountExistByLoginRequest {
  string account_login = 1;
  uint32 skip_account_id = 2;
}
message AccountExistByEmailRequest {
  string email = 1;
  uint32 skip_account_id = 2;
}
message AccountExistAccountResponse {
  Error.ID error_id = 1;
  bool exist = 2;
}
message AccountInfoResponse {
  Error.ID error_id = 1;
  mlmbox.type.Account account = 2;
}
message AccountShortInfoResponse {
  Error.ID error_id = 1;
  uint32 account_id = 2;
  string account_login = 3;
  string referral_login = 4;
  mlmbox.type.Profile profile = 5;
  uint32 password_modified_at = 6;
  string email = 7; // account email
  string locale = 8; // language identifier(en-US, ...)
  bool baned = 9;
  bool activated = 10;
}
message AccountProfileSetRequest {
  uint32 account_id = 1;
  mlmbox.type.Profile profile = 2;
}
message AccountLocaleSetRequest {
  uint32 account_id = 1;
  string locale = 2;
}
message AccountPasswordSetRequest {
  uint32 account_id = 1;
  string password_hash = 2;
}
message AccountEmailSetRequest {
  uint32 account_id = 1;
  string email = 2;
}
message AccountSignAttachRequest {
  uint32 account_id = 1;
  string email = 2;
  string password_hash = 3;
  string locale = 4;
}
message AccountSignUpRequest {
  uint32 referral_id = 1;
  string login = 2;
  string email = 3;
  string password_hash = 4;
  string locale = 5;
}
message AccountSignUpResponse {
  Error.ID error_id = 1;
  uint32 account_id = 2;
}
message AccountLocaleSetResponse {
  uint32 account_id = 1;
  mlmbox.type.Locale locale = 2;
}
message AccountCareerInfoResponse {
  Error.ID error_id = 1;
  mlmbox.type.Career career = 2;
}
message AccountPortfolioInfoResponse {
  Error.ID error_id = 1;
  repeated mlmbox.type.Product.Object objects = 2;
}
message AccountBonusesInfoResponse {
  Error.ID error_id = 1;
  repeated mlmbox.type.Bonus bonuses = 2;
}
message AccountBonusesInfoV2Response {
  message Assets {
    uint32 asset_id = 1;
    repeated mlmbox.type.Bonus bonuses = 2;
  }
  Error.ID error_id = 1;
  repeated Assets assets = 2;
}

message BonusesAutoExchangeSetRequest {
  uint32 account_id = 1;
  bool enabled = 2;
}
message NetworkPartnerRequest {
  uint32 account_id = 1;
  uint32 view_partner_id = 2;
}
message NetworkPartnerResponse {
  Error.ID error_id = 1;
  mlmbox.type.Partner partner = 2;
}
message NetworkTeamSearchRequest {
  uint32 account_id = 1;
  string login_prefix = 2;
  mlmbox.type.Limit limit = 3;
}
message NetworkTeamRequest {
  uint32 account_id = 1;
  uint32 view_partner_id = 2;
  mlmbox.type.Sort partners_sort = 3;
}
message NetworkTeamResponse {
  Error.ID error_id = 1;
  mlmbox.type.Partner partner = 2;
  mlmbox.type.Partner referral = 3;
  repeated mlmbox.type.Partner partners = 4;
}
message NetworkPartnerSearchRequest {
  string login_prefix = 1;
  mlmbox.type.Limit limit = 2;
}
message NetworkPartnersShortInfoResponse {
  Error.ID error_id = 1;
  repeated mlmbox.type.Partner.ShortInfo partners = 2;
}
message NetworkPartnersResponse {
  Error.ID error_id = 1;
  repeated mlmbox.type.Partner partners = 2;
}
message NetworkTeamPartnerListRequest {
  uint32 account_id = 1;
  uint32 view_partner_id = 2;
  uint32 step_partner_id = 3;
  mlmbox.type.Sort partners_sort = 4;
}
message NetworkBookingInfoResponse {
  Error.ID error_id = 1;
  repeated mlmbox.type.Partner.Booking partners = 2;
}
message NetworkBookingCreateRequest {
  uint32 account_id = 1;
  string login = 2;
  string password = 3;
}
message NetworkBookingCreateResponse {
  Error.ID error_id = 1;
  mlmbox.type.Partner.Booking partner = 2;
}

message FarmingContractRequest {
  uint32 account_id = 1;
  uint32 contract_id = 2;
}
message FarmingInfoResponse {
  Error.ID error_id = 1;
  mlmbox.type.Farming farming = 2;
}
message FarmingInfoV2Response {
  Error.ID error_id = 1;
  repeated mlmbox.type.Farming assets = 2;
}
message FarmingContractGetResponse {
  Error.ID error_id = 1;
  mlmbox.type.Farming.Contract contract = 2;
}
message FarmingContractEventsAllResponse {
  Error.ID error_id = 1;
  repeated mlmbox.type.Farming.Contract.Event events = 2;
}
