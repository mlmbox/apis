syntax = "proto3";

package mlmbox.local.voucher;

import "mlmbox/local/type/account.proto";
import "mlmbox/local/type/product.proto";
import "mlmbox/type/sort.proto";
import "mlmbox/type/voucher.proto";

option go_package = "github.com/mlmbox/go-genproto/mlmbox/local/voucher;service_local_voucher_pb";

service Voucher {
  rpc Get (VoucherRequest) returns (VoucherResponse) {} // display selected owner voucher
  rpc Find (VoucherRequest) returns (VoucherResponse) {} // display selected voucher available for activation
  rpc All (mlmbox.local.type.Account.ID) returns (VoucherAllResponse) {} // list of owner's vouchers
  rpc Create (VoucherCreateRequest) returns (VoucherResponse) {} // create a voucher
  rpc Reject (VoucherRequest) returns (Error) {} // cancel the generated voucher
  rpc Activate (VoucherActivateRequest) returns (Error) {} // activate voucher
  rpc MarketList (VoucherMarketListRequest) returns (VoucherAllResponse) {} // list of available vouchers
}

message Error {
  enum ID {
    OK = 0;
    ACCOUNT_UNKNOWN = 1;
    ACCOUNT_NOT_FOUND = 2;
    VOUCHER_UNKNOWN = 3;
    VOUCHER_NOT_FOUND = 4;
    VOUCHER_UNAVAILABLE = 5;
    BALANCE_NOT_ENOUGH = 6;
    OPERATION_UNAVAILABLE = 7;
    ACTIVATION_CODE_WRONG = 8;
  }
  ID error_id = 1;
}
message VoucherRequest {
  uint32 account_id = 1;
  uint32 voucher_id = 2;
}
message VoucherResponse {
  Error.ID error_id = 1;
  mlmbox.type.Voucher voucher = 2;
}
message VoucherAllResponse {
  Error.ID error_id = 1;
  repeated mlmbox.type.Voucher vouchers = 2;
}
message VoucherCreateRequest {
  uint32 account_id = 1;
  repeated mlmbox.type.Voucher.Recipient.ID recipients = 2;
  mlmbox.type.Voucher.Activation activation = 3;
  repeated mlmbox.local.type.Product.Object.ID product_objects = 4;
}
message VoucherActivateRequest {
  uint32 account_id = 1;
  uint32 voucher_id = 2;
  string activation_code = 3;
}
message VoucherMarketListRequest {
  uint32 account_id = 1;
  uint32 step_voucher_id = 2;
  mlmbox.type.Sort sort_vouchers = 3;
}
