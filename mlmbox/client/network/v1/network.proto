syntax = "proto3";

package mlmbox.client.network.v1;

import "mlmbox/type/account.proto";
import "mlmbox/type/partner.proto";
import "mlmbox/type/limit.proto";
import "mlmbox/type/sort.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/mlmbox/go-genproto/mlmbox/client/network/v1;service_client_network_pb";

service Network {
  rpc PartnerGet (mlmbox.type.Account.ID) returns (mlmbox.type.Partner) {}
  rpc PartnerSearch (PartnerSearchRequest) returns (NetworkPartnersShortInfoResponse) {}
  rpc TeamInfo (TeamRequest) returns (TeamResponse) {}
  rpc TeamSearch (TeamSearchRequest) returns (NetworkPartnersResponse) {}
  rpc TeamPartnerList (TeamPartnerListRequest) returns (NetworkPartnersResponse) {}
  rpc BookingInfo (google.protobuf.Empty) returns (NetworkBookingInfoResponse) {}
  rpc BookingCreate (BookingCreateRequest) returns (mlmbox.type.Partner.Booking) {}
}

message PartnerSearchRequest {
  string login_prefix = 1;
  mlmbox.type.Limit limit = 2;
}
message NetworkPartnersShortInfoResponse {
  repeated mlmbox.type.Partner.ShortInfo partners = 1;
}
message TeamRequest {
  mlmbox.type.Account.ID view_partner = 1;
  mlmbox.type.Sort partners_sort = 2;
}
message TeamResponse {
  mlmbox.type.Partner partner = 1;
  mlmbox.type.Partner referral = 2;
  repeated mlmbox.type.Partner partners = 3;
}
message TeamSearchRequest {
  string login_prefix = 1;
  mlmbox.type.Limit limit = 2;
}
message NetworkPartnersResponse {
  repeated mlmbox.type.Partner partners = 1;
}
message TeamPartnerListRequest {
  mlmbox.type.Account.ID view_partner = 1;
  uint32 step_partner_id = 2;
  mlmbox.type.Sort partners_sort = 3;
}
message NetworkBookingInfoResponse {
  repeated mlmbox.type.Partner.Booking bookings = 1;
}
message BookingCreateRequest {
  string login = 1;
}
